Git Bash startup
Fist step of starting up the git bash.
You can do this from any dir.:
	- Start the authentication agent
		eval $(ssh-agent -s)
	- Then you add your SSH key
		ssh-add ~/.ssh/name_rsa
	Note: You made an alias bolth of them.

How to creat a new SSH key
	1.Check the keys you have:
		ls -al ~/.ssh
	2.Submit your email
		ssh-keygen -t rsa -b 4096 -C "j.l.rasmussengarcia@gmail.com"
	3.Follow the onscreen instructions.
		add file to save key
		enter passphrase warning!! your input is hidden
		confirm passphrase

How to create files and folders
	Files:
	touch <filename>
	Folder:
	mkdir <foldername>

How to make a repo.
	You can make it on the GitHub site and then pull it to your project file.
	Or you can make it on your pc and then push it to GitHub.
		- Go to your projects folder.
		- Make a folder for your new project.  use mkdir
		- Go to the new project folder.
		- Use   git init   to initialize new project folder as a Git repo.
		- Make a repo online with the same name and copy the ssh key.
		- use    git remote add origin <ssh key>   to link you project
		  to the online repo.
		- Follow the Push protocol decribed inside this doc.
				git init
				git add README.md
				git commit -m "first commit"
				git remote add origin git@github.com:Darthporkius/Reflection-exercise-Jose.git
				git push -u origin master
		- Push existing repo from com line
				git remote add origin git@github.com:Darthporkius/Reflection-exercise-Jose.git
				git push -u origin master	

How to sync a repo from github to your pc.
	You can use this when you create a repo on the github site.
	Use  "git pull"  to sync up the local files with the files
	in the online repo. Make sure that you are on your project folder.

How to jump to a folder quickly.
	Within your project file type
		cd "And the first few letters of the folder you want"
		Then use TAB.
	Gitbash will try to autocomplete the name of the folder.

Push protocol
	1. Check if you have file or folders that haven't been added to the 
	git repo use      git status
	Everything colored red is not added.
	2. Add the red stuff
	Use   git add *   to add all of them. Or you can specify one of them
	3. Check again with    git status
	4. How to commit
	Use   git commit -a -m <typemessagehere>   to commit all of it to the
	online repo.
	5. How to push the commit.
	Use   git push   to send the commits on their way to the repo.  

How to undo a commit
	babsjaxzsdvsvd

How to resolve merge conflicts
	1. Go to the project file
	2. Use   git status   to see where the problem is.
	3. Open the file that has the conflict in your text editor.
	4. The conflicts are marked with <<<<<<<<, =======, >>>>>>>>> and
	the name of the branch.
	5. Delete what you don't want.
	6. add, commit and push  

Make alias and fucntions in git bash
	1. Use   notepad .bashrc   in git bash to open up
		the .bashrc file.
	2. All aliases and fucntions must be writen in here.
	3. Alias examples:
			Short cut to file.
			alias lab='cd /c/Users/joseluis/Documents/GitHub'
			Short cut of command line
			alias 007='eval $(ssh-agent -s)'
	4. Function examples:
			Short cut to make a push.
				push() {
				    #do things with parameters like $1
				    git add *
				    git commit -a -m "$1"
				    git push
				}
			The $1 is the parameter you give to the function.
			In this case it is the messege that you give with
			the push.

How to make a branch:
	Make sure your master is up to date.
	Create the branch on your local machine.
		$ git checkout -b [name_of_your_new_branch]

	Push the branch on github
		$ git push origin [name_of_your_new_branch]

	You can see all branches created by using
		$ git branch

	
	
